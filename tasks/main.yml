---
# tasks file for cob.linux-common
- name: Make sure Root password is disabled
  user:
    name: root
    update_password: always
    password: '!'

- name: Make sure the user is a member of Staff
  user: name={{ ansible_user|default(lookup('env', 'USER'), True) }}
        groups=staff
        append=yes

# start with just updating the apt cache
- name: Update apt cache
  apt: update_cache=yes

# get this so we can use it for upgrade:
- name: Make sure aptitude is availabe for full upgrade
  apt: name=aptitude state=present

# http://docs.ansible.com/ansible/apt_module.html
- name: Full upgrade
  apt: upgrade=full

- name: Install common packages
  apt:
    name: "{{ item }}"
    state: present
  tags: linux-common
  with_items:
    - build-essential
    - autoconf
    - libssl-dev
    - emacs
    - zip
    - unzip
    - subversion
    - git
    - ntp

- name: Setup Firewall
  include: firewall.yml

- name: Setup NTP
  include: ntp.yml

- name: Setup VIM
  include: vim.yml

- name: Setup Nano
  include: nano.yml

- name: Install SSL Certs
  include: ssl.yml

- name: Setup cron backup script
  copy: src=backup dest=/etc/cron.daily/backup force=no owner=root group=root mode=0755

- name: Create cron backup directory
  file: path=/etc/cron.daily/backup.d state=directory owner=root group=root mode=0755

# *2016.08.18 10:30:12
# I'm not sure that we always want to configure automated updates...
# decision should be based on type of service / server
#
# - name: Setup Unattended Upgrades
#   lineinfile: dest=/etc/apt/apt.conf.d/50unattended-upgrades regexp="{{ item.regexp }}" line="{{ item.line }}"
#   with_items:
#   - { regexp: '\"\$\{distro_id\}\:\$\{distro_codename\}-updates\"\;', line: '    "${distro_id}:${distro_codename}-updates";' }
#   - { regexp: 'Unattended-Upgrade\:\:Remove-Unused-Dependencies',     line: 'Unattended-Upgrade::Remove-Unused-Dependencies \"true\";' }
#   - { regexp: 'Unattended-Upgrade\:\:Automatic-Reboot \"',            line: 'Unattended-Upgrade::Automatic-Reboot \"true\";' }
...
